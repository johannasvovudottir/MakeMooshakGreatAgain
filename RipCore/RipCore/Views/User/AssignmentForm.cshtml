@model RipCore.Models.ViewModels.AssignmentViewModel
@{
    int counter = 0;
    int anotherCounter = 0;
    string userFunction;
}

@if (Model.ID == 0)
{
    userFunction = "Create";
}
else
{
    userFunction = "Edit";
}

@using (Html.BeginForm(userFunction, "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <div class="row">
            <div class="col-md-6">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Title, @Resources.Resources.Title, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>
          
            <div class="form-group">
                @Html.LabelFor(model => model.Weight, @Resources.Resources.Weight, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                </div>
            </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProgrammingLanguageID, @Resources.Resources.Language, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.ProgrammingLanguageID, Model.programmingLanguages, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProgrammingLanguageID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div>
                    <div class="row">
                        <div class='col-sm-6'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.DueDate, @Resources.Resources.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="input-group date" id='datetimepickerfordue'>
                                    <input type="text" class="form-control col-md-8 text-box single-line" id="DueDate" name="DueDate" data-val="true" data-val-date="The field DueDate must be a date." data-val-required="The DueDate field is required."  />
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <script type="text/javascript">
                            $(function () {
                                
                                var dateNow = new Date();
                                $('#datetimepickerfordue').datetimepicker({
                                    format:  'hh:mm:ss YYYY-MM-DD',
                                    defaultDate:moment(dateNow).hours(0).minutes(0).seconds(0).milliseconds(0)                    
                                });
                            });
                        </script>
                    </div>
                </div>

                <div>
                    <div class="row">
                        <div class='col-sm-6'>
                            <div class="form-group">
                                @Html.LabelFor(model => model.DueDate, @Resources.Resources.DateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-offset-2 text-right">
                                    <div class='input-group date' id='datetimepickerforcreate'>
                                        <input type="text" class="form-control col-md-8 text-box" id="DateCreated" name="DateCreated" data-val="true" data-val-date="The field DateCreated must be a date." data-val-required="The DateCreated field is required." />
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <script type="text/javascript">
                        $(function () {
                            var dateNow = new Date();
                            $('#datetimepickerforcreate').datetimepicker({
                                format: 'hh:mm:ss YYYY-MM-DD',
                                defaultDate:moment(dateNow).hours(0).minutes(0).seconds(0).milliseconds(0)                    
                            });
                        });
                        </script>
                    </div>
                </div>

               
                <div class="form-group">
                    @Html.LabelFor(model => model.File, @Resources.Resources.File, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.File, new { type = "file" })
                        @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">

                <div id="milestoneContainer">
                    @for (int i = 0; i < Model.Milestones.Count; i++)
                    {
                        counter++;
                        anotherCounter++;
                        <div class="form-group">
                            <button type="button" class="removeMe btn btn-danger btn-sm fRight"><i class="glyphicon glyphicon-remove"></i></button>
                            <h3><span class="milestoneTitle">@(Model.Milestones[i].Title)</span></h3>
                            @Html.HiddenFor(model => model.Milestones[i].ID)
                            @Html.HiddenFor(model => model.Milestones[i].Title)
                            @Html.HiddenFor(model => model.Milestones[i].Weight)
                            @Html.HiddenFor(model => model.Milestones[i].Description)
                            @Html.HiddenFor(model => model.Milestones[i].TestCases)
                        </div>
                    }
                <input type="hidden" name="counter" id="counter" value="@counter" />
                <input type="hidden" name="anotherCounter" id="anotherCounter" value="@anotherCounter" />
                </div>
            </div>
        </div>
        @Html.HiddenFor(model => model.CourseID)

        @Html.LabelFor(model => model.Description, @Resources.Resources.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.Description)
        <section>
            <div id="editor">
                @if(Model != null)
                {
                    @Html.DisplayFor(model => model.Description)
                }
            </div>
        </section>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@Resources.Resources.Save" id="formSubmit" class="btn btn-default" />
            </div>
        </div>
    </div>

}

@using (Html.BeginForm("AddMilestone", "User", FormMethod.Post, new { id = "milestone", enctype = "multipart/form-data" }))
{
    <div class="form-group">
        <label for="addMilestone" class="control-label col-md-2">@Resources.Resources.addMilestone</label>
        <div class="col-md-10">
            <input type="text" name="addMilestoneTitle" id="addMilestoneTitle" class="form-control" />
            <input type="text" name="addMilestoneWeight" id="addMilestoneWeight" class="form-control" />
            <textarea id="addMilestoneDescription" name="addMilestoneDescription" class="form-control"></textarea>
            <input type="file" id="addMilestoneFile" name="files" class="form-control" />
            <input type="hidden" id="milestoneAssignmentID" name="milestoneAssignmentID" value="@Model.ID" />
            <button type="submit" class="btn btn-primary">@Resources.Resources.addMilestone</button>
        </div>
    </div>
    @Html.ValidationSummary(false)
}




<div>
    @Html.ActionLink(@Resources.Resources.BackButton, "Index", new { Style = "color:White" }, htmlAttributes: new { @class = "btn btn-default", @role = "button", @style = "color:#f00" })
</div>

<script type="text/html" id="milestoneTemplate">
    <div class="form-group">
        <h3><span class="milestoneTitle"></span></h3>
        <button type="button" class="removeMe btn btn-danger btn-sm fRight"><i class="glyphicon glyphicon-remove"></i></button>
        <input type="hidden" class="milestoneID addMilestoneTitle" />
        <input type="hidden" class="milestoneID addMilestoneWeight" />
        <input type="hidden" class="milestoneID addMilestoneDescription" />
    </div>
</script>



<script>var counter = @counter;</script>
<script>var anotherCounter = @anotherCounter;</script>

<script>
    var editor = ace.edit("editor");
    editor.resize();
</script>
