@model RipCore.Models.ViewModels.AssignmentViewModel
@{
    int counter = 0;
}
@Styles.Render("~/Content/tabs.css")

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = 8 })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                    </div>

                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label for="addMilestone">Add Milestone</label>
                        <input type="text" id="addMilestoneTitle" name="addMilestone" class="form-control" />
                        <input type="button" id="milestone">Add</>
                    </div>


                    <div id="milestonesContainer">
                @foreach (var m in Model.Milestones)
                {
                    counter++;
                        <div class="form-group">
                            <h3><span class="milestoneTitle">@(m.Title)</span></h3>
                            <input type="hidden" class="milestoneID" value="@m.ID" name="milestone@(counter)" id="milestone@(counter)" />
                        </div>
                }
                    </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>   
            }
    


    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>



@section scripts
{
    <script type="text/javascript">
        var counter = 0;
        $('#milestone').click(AddMilestone);

        function AddMilestone() {
            var milestoneRow = $('#milestoneTemplate');
            $('.milestoneTitle', milestoneRow).text($('#milestoneTitle').value());
            $('#counter').val(counter);
            $('#milestoneContainer').append(milestoneRow);
        }
    </script>

<script type="text/html" id="milestoneTemplate">
    <div class="form-group">
        <h3><span class="milestoneTitle"></span></h3>
        <input type="hidden" class="" />
    </div>
</script>

}


