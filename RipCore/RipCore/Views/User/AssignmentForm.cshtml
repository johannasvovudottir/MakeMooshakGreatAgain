
@model RipCore.Models.ViewModels.AssignmentViewModel
@{
    int counter = 0;
}

@using (Html.BeginForm("Edit", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <div class="row">
            <div class="col-md-6">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

          
            <div class="form-group">
                @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control col-md-8" } })
                    <i id="dateButton2" class="fa fa-calendar col-md-2"></i>
                    @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
                </div>
            </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control col-md-8" } })
                        <i id="dateButton" class="fa fa-calendar col-md-2"></i>
                        @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="addMilestone" class="control-label col-md-2">Add Milestone</label>
                    <div class="col-md-10">
                        <input type="text" id="addMilestoneTitle" class="form-control" />
                        <input type="text" id="addMilestoneWeight" class="form-control" />
                        <textarea id="addMilestoneDescription" class="form-control"></textarea>
                        <input type="button" id="milestone" class="btn btn-default" value="Add" />
                    </div>

                </div>


                <div id="milestoneContainer">
                    @for (int i = 0; i < Model.Milestones.Count; i++)
                    {
                        counter++;
                        <div class="form-group">
                            <h3><span class="milestoneTitle">@(Model.Milestones[i].Title)</span></h3>
                            @Html.HiddenFor(model => model.Milestones[i].ID)
                            @Html.HiddenFor(model => model.Milestones[i].Title)
                            @Html.HiddenFor(model => model.Milestones[i].Weight)
                            @Html.HiddenFor(model => model.Milestones[i].Description)
                        </div>
                    }
                </div>
                <input type="hidden" name="counter" id="counter" value="@counter" />
            </div>
        </div>
<<<<<<< HEAD
        @Html.HiddenFor(model => model.CourseID)

        @Html.LabelFor(model => model.Description)
        @Html.HiddenFor(model => model.Description)
        <section>
            <div id="editor">
                function foo(items) {
                var x = "Þetta er verkenfnalýsing";
                var HunErRosaGod = "Verð að gera allt í JavaScript";
                return x;
                }
            </div>
        </section>
=======

        <div class="form-group">
            @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.File, new { type = "file" })
                @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
            </div>
        </div>
>>>>>>> 334f8df3f00fa2ced5f2a47c51e748ce5d1ff202

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" id="formSubmit" class="btn btn-default" />
            </div>
        </div>
    </div>

}




<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script type="text/html" id="milestoneTemplate">
    <div class="form-group">
        <h3><span class="milestoneTitle"></span></h3>
        <input type="hidden" class="milestoneID addMilestoneTitle" />
        <input type="hidden" class="milestoneID addMilestoneWeight" />
        <input type="hidden" class="milestoneID addMilestoneDescription" />
    </div>
</script>

<script>var counter = @counter;</script>

<script>
    var editor = ace.edit("editor");
</script>

<script>
    $('#dateButton2').mouseover(function(){
        $('#DateCreated').focus();
    });
</script>
<script>
    $('#dateButton').mouseover(function(){
        $('#DueDate').focus();
    });
</script>
