
@model RipCore.Models.ViewModels.AssignmentViewModel
@{
    int counter = 0;
}
@Styles.Render("~/Content/tabs.css")

@using (Html.BeginForm("Edit", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = 8 })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label for="addMilestone" class="control-label col-md-2">Add Milestone</label>
                <div class="col-md-10">
                    <input type="text" id="addMilestoneTitle" class="form-control" />
                    <input type="text" id="addMilestoneWeight" class="form-control" />
                    <textarea id="addMilestoneDescription" class="form-control"></textarea>
                    <input type="button" id="milestone" class="btn btn-default" value="Add" />
                </div>

            </div>


            <div id="milestoneContainer">
                @for (int i = 0; i < Model.Milestones.Count; i++)
                {
                    counter++;
                    <div class="form-group">
                        <h3><span class="milestoneTitle">@(Model.Milestones[i].Title)</span></h3>
                        @Html.HiddenFor(model => model.Milestones[i].ID)
                        @Html.HiddenFor(model => model.Milestones[i].Title)
                        @Html.HiddenFor(model => model.Milestones[i].Weight)
                        @Html.HiddenFor(model => model.Milestones[i].Description)
                    </div>
                }
            </div>
            <input type="hidden" name="counter" id="counter" value="@counter" />
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.File, new { type = "file" })
                @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>

}



<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script type="text/javascript">
    var counter = @counter;
    $(function () {
        $('#milestone').click(AddMilestone);
    });

    function AddMilestone() {
        var milestoneRow = $($('#milestoneTemplate').html());
        $('.milestoneTitle', milestoneRow).text($('#addMilestoneTitle').val());

        $('.addMilestoneTitle', milestoneRow).val($('#addMilestoneTitle').val()).attr('name', 'Milestones[' + counter + '].Title').attr('id', 'milestoneTitle' + counter);
        $('.addMilestoneWeight', milestoneRow).val($('#addMilestoneWeight').val()).attr('name', 'Milestones[' + counter + '].Weight').attr('id', 'milestoneWeight' + counter);
        $('.addMilestoneDescription', milestoneRow).val($('#addMilestoneDescription').val()).attr('name', 'Milestones[' + counter + '].Description').attr('id', 'milestoneDescription' + counter);
        
        $('#addMilestoneTitle').val('');
        $('#addMilestoneWeight').val('');
        $('#addMilestoneDescription').val('');
        $('#counter').val(++counter);
        $('#milestoneContainer').append(milestoneRow);
    }
</script>

<script type="text/html" id="milestoneTemplate">
    <div class="form-group">
        <h3><span class="milestoneTitle"></span></h3>
        <input type="hidden" class="milestoneID addMilestoneTitle" />
        <input type="hidden" class="milestoneID addMilestoneWeight" />
        <input type="hidden" class="milestoneID addMilestoneDescription" />
    </div>
</script>