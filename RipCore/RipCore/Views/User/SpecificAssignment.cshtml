@model RipCore.Models.ViewModels.AssignmentViewModel
<h3>@Html.DisplayFor(modelItem => Model.Title)</h3>
<table>
    <tbody>
        <tr>
            <td>Date Created: @Model.DateCreated</td>
            <td>Weight: @Model.Weight</td>
        </tr>
        <tr>
            <td>Due Date: @Model.DueDate</td>
            <td></td>
        </tr>
    </tbody>
</table>
@if (Model.IsTeacher == true)
{
    <h4>@Html.ActionLink("Edit", "Edit", new { id = Model.ID, @class = "btn btn-default" })</h4>
}
@Styles.Render("~/Content/tabs.css")

<div id="tabs">
    <ul>
        <li><a href="#tabs-1"><span>Project</span></a></li>
        <li><a href="#tabs-2"><span>Submit in Code Editor</span></a></li>
        <li><a href="#tabs-3"><span>Milestones</span></a></li>
    </ul>

    <div id="tabs-1">
    <h4>Project Description</h4>
    @Html.DisplayFor(modelItem => Model.Description)
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.Title)
    @Html.HiddenFor(model => model.CourseID)

    @for (int i = 1; i < Model.Milestones.Count; i++)
    {
        <h4>@i. @Html.DisplayFor(model => model.Milestones[i].Title) (@Html.DisplayFor(model => model.Milestones[i].Weight)%)</h4>
        <p>@Html.DisplayFor(model => model.Milestones[i].Description)</p>
        
    }
    @if (!Model.IsTeacher)
    {
        using (Html.BeginForm("SubmitSolution", "Solution", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
<<<<<<< HEAD
            @Html.HiddenFor(modelItem => Model.Description)
=======
>>>>>>> 5b866b70930d72ca957efa3d880b1e1d0085505c
            @Html.HiddenFor(model => model.ID)
            @Html.HiddenFor(model => model.Title)
            @Html.HiddenFor(model => model.CourseID)
            <div class="form-group">
                @Html.LabelFor(model => model.milestoneSubmissionID, "Milestone", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.milestoneSubmissionID, Model.milestoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.milestoneSubmissionID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.File, new { type = "file" })
                    @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
                </div>
            </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" id="fileButton" class="btn btn-default" />
                    </div>
                </div>
        }
    }
    </div>
    <div id="tabs-2">
        @if (!Model.IsTeacher)
        {
            using (Html.BeginForm("SubmitSolution", "Solution", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <section>
                    <div id="editor">
                        function foo(items) {
                        var x = "All this is syntax highlighted";
                        return x;
                        }
                    </div>
                </section>
                @Html.HiddenFor(model => model.ID)
                @Html.HiddenFor(model => model.Title)
                @Html.HiddenFor(model => model.CourseID)
                @Html.HiddenFor(model => model.Solution)
                <div class="form-group">
                    @Html.LabelFor(model => model.milestoneSubmissionID, "Milestone", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.milestoneSubmissionID, Model.milestoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.milestoneSubmissionID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" id="solutionButton" class="btn btn-default" />
                    </div>
                </div>
            }

        }
        
    </div>
    <div id="tabs-3">
        @using (Html.BeginForm("SubmitSolution", "Solution", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            for (int i = 1; i < Model.Milestones.Count; i++)
            {
                <div class="form-group">
                    @Html.HiddenFor(model => Model.Milestones[i].AssignmentID)
                    @Html.HiddenFor(model => Model.Milestones[i].ID)
                    @Html.HiddenFor(model => Model.Milestones[i].Title)
                    @Html.HiddenFor(model => Model.Milestones[i].Weight)
                    <h4>@Model.Milestones[i].Title</h4>
                    @Html.ActionLink("Delete", "DeleteMilestone", new { id = Model.Milestones[i].ID }, htmlAttributes: new { @class = "deleteButton pull-right", @role = "button" })
                </div>

                <p>@Model.Milestones[i].Description</p>
            }

            @Html.HiddenFor(model => Model.Milestones)
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" id="fileButton" class="btn btn-default" />
            </div>
        </div>
        }
   </div>
</div>

<script type="text/javascript">
    var editor = ace.edit("editor");
    editor.setTheme("ace/theme/twilight");
    editor.getSession().setMode("ace/mode/javascript");
</script>

<script type="text/javascript">
    $('#solutionButton').click(function () {
        $('#File').val("");
    }
    );
</script>

<script type="text/javascript">
    $('#fileButton').click(function () {
        $('#Solution').val("");
    }
    );
</script>

